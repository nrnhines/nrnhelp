? ropen
@hsyn
ropen("infile")
ropen()
@hdesc
@{Ropen()@} opens @varinfile for reading.  A subsequent @{ropen()@} with no arguments
closes the previously opened @varinfile. A file which is re-opened with
@{ropen(@varinfile)@} positions the stream at the beginning of the file.
@hex
@code
proc r() {
   ropen("file.dat")
   for (i=0; i<ndat; i=i+1) {
      x[i] = fscan()  y[i]=fscan()
   }
   ropen()
}
@endcode


@hdiag
This function returns 0 if the file is not successfully opened.

@hsee
read, fscan, getstr, File

@hbug
There is no way to open more than one read file at a time.  The same is
true for write files.

@h
? wopen
@hsyn
wopen("outfile)
wopen()
@hdesc
@{Wopen@} is similar to @{ropen@} but opens a file for writing. Contents of an
already existing @varoutfile are destroyed.  Wopened files are written to
with @afprint . With no argument, the previously wopened file is closed.
Wopen returns 0 on failure to open a file.
@hex
@code
proc w() {
   wopen("file.dat")
   for (i=0; i<ndat; i=i+1) {
      fprint("%g %g\n", x[i], y[i])
   }
   wopen()
}
@endcode
@hsee
fprint, File
@h
? xopen
@hsyn
xopen("hocfile")
xopen("hocfile", "RCSrevision")
@hdesc
@{Xopen()@} executes the commands in @{hocfile@}.  This is a convenient way
to define user functions and procedures.
An optional second argument is the RCS revision number in the form of a
string. The RCS file with that revision number is checked out into a
temporary file and executed. The temporary file is then removed.  A file
of the same primary name is unaffected.
@h
? fprint
Same as @aprintf#IO but prints to a file opened with @awopen#IO . If no file
is opened it prints to the standard output.
